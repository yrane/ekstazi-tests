#!/bin/bash
# TODO: comment out the script
if [ $# -eq 0 ]; then
  echo warning: need the name of test directory, e.g., $0 changed-test-method-body
  exit
fi
# TODO: extend the script to work with multiple tests # google for "bash shift"
simple=$1
cd ${simple}
test=$(pwd)
# for debug # echo test directory is: ${test}

# TODO: install the latest version (4.0.1)
# Done installing latest version
ekstazi_version=4.0.1
junit_stuff=$HOME/.m2/repository/junit/junit/4.11/junit-4.11.jar:$HOME/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar

function compile() {
  echo compile $1
  javac -cp ${junit_stuff} *java
}

function copy_and_compile() {
  cp -r ${test}/$1 ${out}/
  cd ${out}/$1
  compile $1
}

function run_ekstazi() {
  echo running Ekstazi in ${out}
  cd ${out}
  if [ -f ${test}/class ]; then
    class=$(cat ${test}/class)
  else
    class=$(find -name "*Test*.class" | sed -e 'sX^\./XX' -e 's/.class$//' -e 'sX/X.X')
  fi
  java -javaagent:$HOME/.m2/repository/org/ekstazi/org.ekstazi.core/${ekstazi_version}/org.ekstazi.core-${ekstazi_version}.jar=mode=junit -cp .:${junit_stuff} org.junit.runner.JUnitCore ${class}
}

out=/tmp/${simple}
rm -rf ${out}
mkdir -p ${out}
cd ${out}
copy_and_compile v1
# TODO: change the script to run in the same folder
#copy_and_compile v2
run_ekstazi v1 >>${out}/log1
#cd ${out}/v2
#cp -r ../v1/.ekstazi .
run_ekstazi v1 >>${out}/log2
<${out}/log2 grep OK | sed -e 's/OK (//' -e 's/ test.)//' | diff - ${test}/expected >>${out}/log2
if [ $? -eq 0 ]; then
  echo PASSED: ${simple}
else
  echo FAILED: ${simple}
fi
